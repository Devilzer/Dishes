{"version":3,"sources":["config/noty.js","redux/actions/userActions.js","redux/actions/dishActions.js","components/Login.js","components/AddDish.js","components/DishCard.js","components/Vote.js","components/TableRow.js","components/Results.js","components/Home.js","App.js","redux/reducers/userReducer.js","redux/reducers/dishReducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["showNotification","text","Noty","layout","theme","type","timeout","show","updateUser","user","payload","updateVote","dish","Login","useState","username","password","value","setValue","dispatch","useDispatch","users","useSelector","state","className","onChange","e","target","placeholder","onClick","index","findIndex","console","log","AddDish","currentUser","id","Date","now","name","image","description","votes","createdBy","multiple","onDone","base64","DishCard","forceUpdate","useForceUpdate","cardClass","likedDishes","includes","updatedUser","splice","updatedDish","length","src","Vote","dishes","map","TableRow","Class","Results","sorted","sort","a","b","votesA","votesB","comparison","Home","page","setPage","addClass","voteClass","resultClass","to","exact","path","App","isLoggedIn","initialState","reducer","action","usersAfter","dishAftAdd","rootReducer","combineReducers","userReducer","dishReducer","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAGaA,EAAmB,SAACC,GAC5B,IAAIC,IAAK,CACLD,KAAOA,EACPE,OAAS,cACTC,MAAQ,OACRC,KAAO,QACPC,QAAU,MACXC,QCWKC,EAAa,SAACC,GACvB,MAAM,CACFJ,KAAO,cACPK,QAAUD,ICdLE,EAAa,SAACC,GACvB,MAAM,CACFP,KAAO,cACTK,QAAUE,I,OC6CDC,MArDf,WAAkB,IAAD,EACaC,mBAAS,CAC/BC,SAAU,GACVC,SAAU,KAHD,mBACNC,EADM,KACCC,EADD,KAKPC,EAAWC,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMd,KAAKY,SA4B9C,OACI,qBAAKG,UAAU,kBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,QAAf,2BAGA,yCAGA,uBAAOnB,KAAK,OAAOY,MAAOA,EAAMF,SAAUU,SAAU,SAACC,GAAD,OAAKR,EAAS,2BAAID,GAAL,IAAWF,SAASW,EAAEC,OAAOV,UAASW,YAAY,aACnH,uBAAOvB,KAAK,WAAWY,MAAOA,EAAMD,SAAUS,SAAU,SAACC,GAAD,OAAKR,EAAS,2BAAID,GAAL,IAAWD,SAASU,EAAEC,OAAOV,UAASW,YAAY,aACvH,wBAAQC,QArCA,WAEhB,GAAoB,KAAjBZ,EAAMF,UAAkC,KAAjBE,EAAMD,SAAhC,CAKA,IAAIc,EAAQT,EAAMU,WAAU,SAAAtB,GAAI,OAAEA,EAAKM,WAAWE,EAAMF,YACxD,IAAY,IAATe,EAMC,GAAGT,EAAMS,GAAOd,WAAWC,EAAMD,SAC7BG,GFzBZnB,EAAiB,iBACX,CACFK,KAAO,gBEwBCc,EFpBN,CACFd,KAAO,gBACPK,QEkBgCW,EAAMS,KAC9BE,QAAQC,IAAI,kBAGZjC,EAAiB,qCAXrBA,EAAiB,qCANjBA,EAAiB,+BAkCb,0B,gCCmBDkC,MA/Df,WACI,IAAMf,EAAWC,cACXX,EAAOa,aAAY,SAAAC,GAAK,OAAIA,EAAMd,KAAK0B,eAF9B,EAGWrB,mBAAS,CAC/BsB,GAAKC,KAAKC,MACVC,KAAO,GACPC,MAAQ,GACRC,YAAc,GACdC,MAAQ,EACRC,UAAYlC,EAAKM,WATN,mBAGRE,EAHQ,KAGDC,EAHC,KA4Bf,OACI,mCACI,sBAAKM,UAAU,wBAAf,UACI,qBAAKA,UAAU,UAAf,4BAGA,sBAAKA,UAAU,YAAf,UACI,8CACc,sBAAMA,UAAU,WAAhB,kBAEd,uBAAOP,MAAOA,EAAMsB,KAAMd,SAAU,SAACC,GAAD,OAAKR,EAAS,2BAAID,GAAL,IAAWsB,KAAKb,EAAEC,OAAOV,UAASZ,KAAK,SACxF,0CACU,sBAAMmB,UAAU,WAAhB,kBAEV,8BACA,cAAC,IAAD,CACIA,UAAU,aACVoB,UAAW,EACXC,OAAS,gBAAEC,EAAF,EAAEA,OAAF,OAAY5B,EAAS,2BAAID,GAAL,IAAWuB,MAAMM,UAIlD,gDACiB,sBAAMtB,UAAU,WAAhB,kBAEjB,0BAAUP,MAAOA,EAAMwB,YAAahB,SAAU,SAACC,GAAD,OAAKR,EAAS,2BAAID,GAAL,IAAWwB,YAAYf,EAAEC,OAAOV,YAC3F,wBAAQY,QAzCH,WFjBF,IAACjB,EEkBA,KAAbK,EAAMsB,MAAiC,KAApBtB,EAAMwB,aAAiC,IAAbxB,EAAMuB,QAGlDrB,GFrBYP,EEqBKK,EFpBzBjB,EAAiB,cACX,CACFK,KAAO,WACPK,QAAUE,KEkBNM,EAAS,2BACFD,GADC,IAEJmB,GAAGC,KAAKC,MACRC,KAAK,GACLE,YAAY,GACZD,MAAM,QA+BF,+B,QCmBLO,MApEf,YAA2B,IAARnC,EAAO,EAAPA,KACToC,EANV,WAA0B,IAAD,EACKlC,mBAAS,GADd,mBACPI,GADO,WAErB,OAAO,kBAAMA,GAAS,SAAAD,GAAK,OAAIA,EAAQ,MAInBgC,GAEd9B,EAAWC,cACXX,EAAOa,aAAY,SAAAC,GAAK,OAAIA,EAAMd,KAAK0B,eAEzCe,EAAW,GA4Cf,OA1CIA,EADDzC,EAAK0C,YAAYC,SAASxC,EAAKwB,IAClB,0BAGA,aAwCZ,sBAAKZ,UAAW0B,EAAhB,UACI,qBAAK1B,UAAU,gBAAgBK,QArCf,WACpB,GAAGpB,EAAK0C,YAAYC,SAASxC,EAAKwB,IAAI,CAClC,IAAIiB,EAAc5C,EACdqB,EAAQuB,EAAYF,YAAYpB,WAAU,SAAAK,GAAE,OAAEA,IAAKxB,EAAKwB,MAC5DiB,EAAYF,YAAYG,OAAOxB,EAAM,GACrCX,EAASX,EAAW6C,IAEpB,IAAIE,EAAc3C,EACfA,EAAK8B,MAAM,GACVa,EAAYb,QAEhBvB,EAASR,EAAW4C,IACpBvD,EAAiB,oBAEjB,CACA,GAA6B,IAA1BS,EAAK0C,YAAYK,OAEhB,YADAxD,EAAiB,gCAGrB,GAAGS,EAAKM,WAAaH,EAAK+B,UAEtB,YADA3C,EAAiB,yBAGrB,IAAIqD,EAAc5C,EAClB4C,EAAYF,YAAZ,sBAA8B1C,EAAK0C,aAAnC,CAA+CvC,EAAKwB,KACpDjB,EAASX,EAAW6C,IAEpB,IAAIE,EAAc3C,EAClB2C,EAAYb,QACZvB,EAASR,EAAW4C,IACpBvD,EAAiB,cAErBgD,KAKI,SACI,qBAAKS,IAAK7C,EAAK4B,UAEnB,qBAAKhB,UAAU,OAAf,SACKZ,EAAK2B,OAEV,qBAAKf,UAAU,cAAf,SACKZ,EAAK6B,cAEV,sBAAKjB,UAAU,SAAf,yBACiBZ,EAAK+B,iBC3CnBe,MA1Bf,WACI,IAAMC,EAASrC,aAAY,SAAAC,GAAK,OAAIA,EAAMX,KAAKA,QAC/C,OACI,qCACI,qBAAKY,UAAU,OAAf,wDAGA,sBAAKA,UAAU,iBAAf,UACuB,IAAlBmC,EAAOH,QAAgB,uDAIpBG,EAAOC,KAAI,SAAChD,EAAKkB,GAAN,OACP,cAAC,EAAD,CACIlB,KAAQA,EAERkB,MAASA,GADFA,aCQpB+B,MAxBf,YAAiC,IAAdjD,EAAa,EAAbA,KAAKkB,EAAQ,EAARA,MAGhBgC,EAAO,GAOX,OALIA,EAJSxC,aAAY,SAAAC,GAAK,OAAIA,EAAMd,KAAK0B,eAGrCgB,YAAYC,SAASxC,EAAKwB,IACtB,OAGA,IAGR,mCACI,gCACI,qBAAIZ,UAAWsC,EAAf,UACI,6BAAKhC,EAAM,IACX,6BAAKlB,EAAK2B,OACV,+BAAK3B,EAAK8B,MAAV,OACA,6BAAK9B,EAAK+B,oBC6BfoB,MA5Cf,WACI,IAAMJ,EAASrC,aAAY,SAAAC,GAAK,OAAIA,EAAMX,KAAKA,QAC3CoD,EAAM,YAAOL,GAiBjB,OAHAK,EAAOC,MAZP,SAAiBC,EAAGC,GAChB,IAAMC,EAASF,EAAExB,MACX2B,EAASF,EAAEzB,MACb4B,EAAa,EAMjB,OALIF,EAASC,EACXC,GAAc,EACLF,EAASC,IAClBC,EAAa,GAERA,KAIXtC,QAAQC,IAAI+B,GAGR,mCACI,wBAAOxC,UAAU,UAAjB,UACA,gCACI,+BACI,yCACA,2CACA,uCACA,gDAIPwC,EAAOJ,KAAI,SAAChD,EAAKkB,GAAN,OACR,cAAC,EAAD,CAEIlB,KAAMA,EACNkB,MAAOA,GAFFA,YCmCVyC,MAjEf,WACI,IAAMpD,EAAWC,cADL,EAGYN,mBAAS,WAHrB,mBAGL0D,EAHK,KAGCC,EAHD,KAIRC,EAAW,GACXC,EAAY,GACZC,EAAY,GAChB,GAAU,YAAPJ,EAAiB,CAChBE,EAAS,WACLC,EAAY,GACZC,EAAY,QACd,GAAU,SAAPJ,EACDE,EAAW,GACXC,EAAY,WACZC,EAAY,QAEZF,EAAW,GACXC,EAAY,GACZC,EAAY,WAGpB,OACI,cAAC,IAAD,UACI,qCACI,sBAAKpD,UAAU,SAAf,UACI,yCACW,mBAAGA,UAAU,uBAExB,oBAAIK,QAAS,kBAAIV,GRrBjCnB,EAAiB,mBACX,CACFK,KAAO,kBQmBK,uBAIJ,sBAAKmB,UAAU,UAAf,UACI,cAAC,IAAD,CAAMqD,GAAG,IAAT,SACI,qBAAIrD,UAAWkD,EAAU7C,QAAS,kBAAI4C,EAAQ,YAA9C,uBACU,mBAAGjD,UAAU,4BAG3B,cAAC,IAAD,CAAMqD,GAAG,QAAT,SACI,qBAAIrD,UAAWmD,EAAW9C,QAAS,kBAAI4C,EAAQ,SAA/C,mBACM,mBAAGjD,UAAU,yBAGvB,cAAC,IAAD,CAAMqD,GAAG,WAAT,SACI,qBAAIrD,UAAWoD,EAAa/C,QAAS,kBAAI4C,EAAQ,YAAjD,sBACS,mBAAGjD,UAAU,0BAI9B,eAAC,IAAD,WACI,cAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOA,KAAK,WAAZ,SACI,cAAC,EAAD,e,YChDTC,MAVf,WACE,IAAMC,EAAa3D,aAAY,SAAAC,GAAK,OAAIA,EAAMd,KAAKwE,cACnD,OACE,sBAAKzD,UAAU,MAAf,WACgB,IAAbyD,GAAsB,cAAC,EAAD,KACT,IAAbA,GAAqB,cAAC,EAAD,Q,wBCZtBC,EAAe,CACjB7D,MAAO,CAAC,CACAN,SAAW,SACXC,SAAW,YACXmC,YAAc,IAElB,CACIpC,SAAW,OACXC,SAAW,UACXmC,YAAc,IAElB,CACIpC,SAAW,QACXC,SAAW,WACXmC,YAAc,IAElB,CACIpC,SAAW,OACXC,SAAW,UACXmC,YAAc,IAElB,CACIpC,SAAW,SACXC,SAAW,YACXmC,YAAc,IAElB,CACIpC,SAAW,MACXC,SAAW,SACXmC,YAAc,IAElB,CACIpC,SAAW,OACXC,SAAW,UACXmC,YAAc,IAElB,CACIpC,SAAW,QACXC,SAAW,WACXmC,YAAc,IAElB,CACIpC,SAAW,QACXC,SAAW,WACXmC,YAAc,IAElB,CACIpC,SAAW,SACXC,SAAW,YACXmC,YAAc,KAGtBhB,YAAY,GACZ8C,YAAa,GAkCFE,EA/BE,WAAiC,IAAhC5D,EAA+B,uDAAvB2D,EAAcE,EAAS,uCAC7C,OAAQA,EAAO/E,MACX,IAAK,aACD,kCACOkB,GADP,IAEI0D,YAAa,IAErB,IAAK,gBACD,kCACO1D,GADP,IAEIY,YAAciD,EAAO1E,UAE7B,IAAK,cACD,kCACOa,GADP,IAEI0D,YAAa,EACb9C,YAAc,KAEtB,IAAK,cACD,IAAIL,EAAQP,EAAMF,MAAMU,WAAU,SAAAtB,GAAI,OAAEA,EAAKM,WAAWqE,EAAO1E,QAAQK,YACnEsE,EAAa9D,EAAMF,MAEvB,OADAgE,EAAWvD,GAASsD,EAAO1E,QAC3B,2BACOa,GADP,IAEIF,MAAQgE,IAEhB,QACI,OAAO9D,ICnFb2D,EAAe,CACjBtE,KAAM,IAwBKuE,EArBE,WAAiC,IAAhC5D,EAA+B,uDAAvB2D,EAAcE,EAAS,uCAC7C,OAAQA,EAAO/E,MACX,IAAK,WACD,kCACOkB,GADP,IAEIX,KAAI,sBAAOW,EAAMX,MAAb,CAAkBwE,EAAO1E,YAErC,IAAK,cACD,IAAMoB,EAAQP,EAAMX,KAAKmB,WAAU,SAAAnB,GAAI,OAAEA,EAAKwB,KAAKgD,EAAO1E,QAAQ0B,MAC9DkD,EAAa/D,EAAMX,KAEvB,OADA0E,EAAWxD,GAASsD,EAAO1E,QAC3B,2BACOa,GADP,IAEIX,KAAO0E,IAGf,QACI,OAAO/D,I,yBCbbgE,EAAcC,0BAAgB,CAChC/E,KAAOgF,EACP7E,KAAO8E,IAILC,EAAgB,CAClBC,IAAM,OACNC,aAKWC,EAFUC,YAAeJ,EAAcJ,GCdhDS,EAAQC,sBAAYV,EAAYW,iCAChCC,EAAYC,YAAaJ,GCE/BK,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAaG,UAAWA,EAAxB,SACE,cAAC,IAAMI,WAAP,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,W","file":"static/js/main.1ba8b77d.chunk.js","sourcesContent":["import Noty from \"noty\";\r\n\r\n//noty js config to show notifications\r\nexport const showNotification = (text)=> {\r\n     new Noty({\r\n         text : text,\r\n         layout : \"bottomRight\",\r\n         theme : \"nest\",\r\n         type : \"alert\",\r\n         timeout : 750,\r\n     }).show();\r\n};","import { showNotification } from \"../../config/noty\";\r\n\r\nexport const userLogin = ()=>{\r\n    showNotification(\"Login Success\");\r\n    return{\r\n        type : \"LOGIN_USER\"\r\n    };\r\n};\r\nexport const setCurrentUser = (user)=>{\r\n    return{\r\n        type : \"SET_CURR_USER\",\r\n        payload : user\r\n    };\r\n};\r\nexport const logoutUser = ()=>{\r\n    showNotification(\"Log Out Success\");\r\n    return{\r\n        type : \"LOGOUT_USER\"\r\n    };\r\n};\r\n\r\nexport const updateUser = (user)=>{\r\n    return{\r\n        type : \"UPDATE_USER\",\r\n        payload : user\r\n    };\r\n};","import { showNotification } from \"../../config/noty\";\r\n\r\nexport const addDish = (dish)=>{\r\n    showNotification(\"Dish Added\");\r\n    return{\r\n        type : \"ADD_DISH\",\r\n        payload : dish\r\n    };\r\n};\r\n\r\nexport const updateVote = (dish)=>{\r\n    return{\r\n        type : \"UPDATE_VOTE\",\r\n      payload : dish\r\n    };\r\n};\r\n\r\n\r\n","import React,{useState} from 'react';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { userLogin, setCurrentUser } from \"../redux/actions\";\r\nimport { showNotification } from \"../config/noty\";\r\n\r\nfunction Login() {\r\n    const [value, setValue] = useState({\r\n        username :\"\",\r\n        password :\"\"\r\n    });\r\n    const dispatch = useDispatch();\r\n    const users = useSelector(state => state.user.users);\r\n\r\n    const handleClick = ()=>{\r\n        //checking if any field is empty while submit\r\n        if(value.username===\"\" || value.password===\"\"){\r\n            showNotification(\"please fill all the fields\");\r\n            return;\r\n        }\r\n        //search for user\r\n        var index = users.findIndex(user=>user.username===value.username);\r\n        if(index===-1){\r\n            showNotification(\"invalid username or password\");\r\n            return;\r\n        }\r\n        else{\r\n            //match password\r\n            if(users[index].password===value.password){\r\n                dispatch(userLogin());\r\n                dispatch(setCurrentUser(users[index]));\r\n                console.log(\"logged in\");\r\n            }\r\n            else{\r\n                showNotification(\"invalid username or password\");\r\n                return;\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-container\">\r\n            <div className=\"contents\">\r\n                <div className=\"wtext\">\r\n                    Welcome Back,\r\n                </div>\r\n                <h1>\r\n                    Log In!\r\n                </h1>\r\n                <input type=\"text\" value={value.username} onChange={(e)=>setValue({...value,username:e.target.value})} placeholder=\"Username\"/>\r\n                <input type=\"password\" value={value.password} onChange={(e)=>setValue({...value,password:e.target.value})} placeholder=\"Password\"/>\r\n                <button onClick={handleClick}>\r\n                    Log In\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Login;\r\n","import React,{useState} from 'react';\r\n//filebase64 for storing images in 64bit format\r\nimport FileBase64 from \"react-file-base64\";\r\nimport { useDispatch ,useSelector } from \"react-redux\";\r\nimport { addDish } from \"../redux/actions\";\r\n\r\nfunction AddDish() {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.user.currentUser);\r\n    const [value, setValue] = useState({\r\n        id : Date.now(),\r\n        name : \"\",\r\n        image : \"\",\r\n        description : \"\",\r\n        votes : 0,\r\n        createdBy : user.username\r\n    });\r\n\r\n    //dish form submit handler function. \r\n    const handleSubmit = ()=>{\r\n        if(value.name===\"\" || value.description===\"\" || value.image==\"\"){\r\n            return;\r\n        }else{\r\n            dispatch(addDish(value));\r\n            setValue({\r\n                ...value,\r\n                id:Date.now(),\r\n                name:\"\",\r\n                description:\"\",\r\n                image:\"\"\r\n            });\r\n        }\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"add-product-container\">\r\n                <div className=\"heading\">\r\n                 Add a new dish\r\n                </div>\r\n                <div className=\"input-box\">\r\n                    <span>\r\n                        Dish name <span className=\"required\">*</span>\r\n                    </span>\r\n                    <input value={value.name} onChange={(e)=>setValue({...value,name:e.target.value})} type=\"text\"/>\r\n                    <span>\r\n                        Image <span className=\"required\">*</span>\r\n                    </span>\r\n                    <div>\r\n                    <FileBase64\r\n                        className=\"file-input\"\r\n                        multiple={ false }\r\n                        onDone ={({base64})=>setValue({...value,image:base64})}\r\n                    />\r\n                    </div>\r\n                    \r\n                    <span>\r\n                         Description <span className=\"required\">*</span>\r\n                    </span>\r\n                    <textarea value={value.description} onChange={(e)=>setValue({...value,description:e.target.value})}/>\r\n                    <button onClick={handleSubmit}>\r\n                        Add Dish\r\n                    </button>\r\n                </div>\r\n            </div>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddDish;\r\n","import React,{useState} from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUser, updateVote } from \"../redux/actions\";\r\nimport { showNotification } from \"../config/noty\";\r\n\r\n// coustom function hook for forcfully rerendering the component\r\nfunction useForceUpdate(){\r\n    const [value, setValue] = useState(0); // integer state\r\n    return () => setValue(value => value + 1); // update the state to force render\r\n};\r\n\r\nfunction DishCard({dish}) {\r\n    const forceUpdate = useForceUpdate();\r\n    \r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.user.currentUser);\r\n\r\n    var cardClass =\"\";\r\n    if(user.likedDishes.includes(dish.id)){\r\n        cardClass = \"dish-card dish-selected\";\r\n       \r\n    }else{\r\n        cardClass = \"dish-card \";\r\n    }\r\n\r\n    //function to handle card click for adding and removing votes\r\n    const handleCardClick = ()=>{\r\n        if(user.likedDishes.includes(dish.id)){\r\n            let updatedUser = user;\r\n            let index = updatedUser.likedDishes.findIndex(id=>id===dish.id);\r\n            updatedUser.likedDishes.splice(index,1);\r\n            dispatch(updateUser(updatedUser));\r\n            \r\n            let updatedDish = dish;\r\n            if(dish.votes>0){\r\n                updatedDish.votes--;\r\n            }\r\n            dispatch(updateVote(updatedDish));\r\n            showNotification(\"Vote Removed\");\r\n        }\r\n        else{\r\n            if(user.likedDishes.length===3){\r\n                showNotification(\"can't vote more than 3 times\");\r\n                return;\r\n            }\r\n            if(user.username === dish.createdBy){\r\n                showNotification(\"can't vote own dishes\");\r\n                return;\r\n            }\r\n            let updatedUser = user;\r\n            updatedUser.likedDishes = [...user.likedDishes,dish.id];\r\n            dispatch(updateUser(updatedUser));\r\n\r\n            let updatedDish = dish;\r\n            updatedDish.votes++;\r\n            dispatch(updateVote(updatedDish));\r\n            showNotification(\"Vote added\");\r\n        }\r\n        forceUpdate();\r\n    }\r\n    \r\n    return (\r\n        <div className={cardClass}>\r\n            <div className=\"img-container\" onClick={handleCardClick}>\r\n                <img src={dish.image}/>\r\n            </div>\r\n            <div className=\"name\">\r\n                {dish.name}\r\n            </div>\r\n            <div className=\"description\">\r\n                {dish.description} \r\n            </div>\r\n            <div className=\"author\">\r\n                CreatedBy : {dish.createdBy}\r\n            </div>\r\n         </div>\r\n    )\r\n};\r\n\r\nexport default DishCard;\r\n","import React from 'react';\r\nimport DishCard from \"./DishCard\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Vote() {\r\n    const dishes = useSelector(state => state.dish.dish)\r\n    return (\r\n        <>\r\n            <div className=\"note\">\r\n                Note : You can only vote for three dishes.\r\n            </div>\r\n            <div className=\"dish-container\">\r\n                {dishes.length === 0 && <h1>\r\n                    No Dishes to display!\r\n                </h1>}\r\n                {\r\n                    dishes.map((dish,index)=>(\r\n                        <DishCard\r\n                            dish = {dish}\r\n                            key = {index}\r\n                            index = {index}\r\n                        />\r\n                    ))\r\n                }\r\n                \r\n            </div>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Vote;\r\n","import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction TableRow({dish,index}) {\r\n    const user = useSelector(state => state.user.currentUser);\r\n    //setting highlight class\r\n    var Class =\"\";\r\n    if(user.likedDishes.includes(dish.id)){\r\n        Class = \"tr-s\";\r\n       \r\n    }else{\r\n        Class = \" \";\r\n    }\r\n    return (\r\n        <>\r\n            <tbody>\r\n                <tr className={Class}>\r\n                    <td>{index+1}</td>\r\n                    <td>{dish.name}</td>\r\n                    <td>{dish.votes} </td>\r\n                    <td>{dish.createdBy}</td>\r\n                </tr>\r\n            </tbody>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TableRow;\r\n","import React from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport TableRow from \"./TableRow\";\r\n\r\n\r\nfunction Results() {\r\n    const dishes = useSelector(state => state.dish.dish);\r\n    var sorted = [...dishes];\r\n    //function for sorting\r\n    function compare(a, b) {\r\n        const votesA = a.votes;\r\n        const votesB = b.votes;\r\n        let comparison = 0;\r\n        if (votesA > votesB) {\r\n          comparison = -1;\r\n        } else if (votesA < votesB) {\r\n          comparison = 1;\r\n        }\r\n        return comparison;\r\n    };\r\n\r\n    sorted.sort(compare);\r\n    console.log(sorted);\r\n    \r\n    return (\r\n        <>\r\n            <table className=\"results\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Ranking</th>\r\n                    <th>Dish Name</th>\r\n                    <th>Votes</th>\r\n                    <th>CreatedBy</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            {sorted.map((dish,index)=>(\r\n                <TableRow\r\n                    key={index}\r\n                    dish={dish}\r\n                    index={index}\r\n                />\r\n            ))}\r\n            {/* <TableRow/> */}\r\n            </table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Results;\r\n","import React,{useState} from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport AddDish from \"./AddDish\";\r\nimport Vote from \"./Vote\";\r\nimport Results from \"./Results\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutUser } from \"../redux/actions\";\r\n\r\nfunction Home() {\r\n    const dispatch = useDispatch();\r\n    //for updating navbar styles\r\n    const [page, setPage] = useState(\"addDish\");\r\n    var addClass = \"\";\r\n    var voteClass = \"\";\r\n    var resultClass=\"\";\r\n    if(page===\"addDish\"){\r\n        addClass=\"selected\";\r\n        var voteClass = \"\";\r\n        var resultClass=\"\";\r\n    }else if(page===\"vote\"){\r\n        var addClass = \"\";\r\n        var voteClass = \"selected\";\r\n        var resultClass=\"\";\r\n    }else{\r\n        var addClass = \"\";\r\n        var voteClass = \"\";\r\n        var resultClass=\"selected\";\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <>           \r\n                <div className=\"header\">\r\n                    <h1>\r\n                        Dishes <i className=\"fas fa-utensils\"></i>\r\n                    </h1>\r\n                    <h2 onClick={()=>dispatch(logoutUser())}>\r\n                        LogOut\r\n                    </h2>\r\n                </div>\r\n                <div className=\"nav-bar\">\r\n                    <Link to=\"/\">\r\n                        <h3 className={addClass} onClick={()=>setPage(\"addDish\")}>\r\n                        Add Dish  <i className=\"fas fa-plus-square\"></i>\r\n                        </h3>\r\n                    </Link>\r\n                    <Link to=\"/vote\">\r\n                        <h3 className={voteClass} onClick={()=>setPage(\"vote\")}>\r\n                        Vote  <i className=\"fas fa-vote-yea\"></i>\r\n                        </h3>\r\n                    </Link>\r\n                    <Link to=\"/results\">\r\n                        <h3 className={resultClass} onClick={()=>setPage(\"results\")}>\r\n                        Results  <i className=\"fas fa-poll-h\"></i>\r\n                        </h3>\r\n                    </Link>\r\n                </div>     \r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <AddDish/>\r\n                    </Route>\r\n                    <Route path=\"/vote\">\r\n                        <Vote/>\r\n                    </Route>\r\n                    <Route path=\"/results\">\r\n                        <Results/>\r\n                    </Route>\r\n                </Switch>       \r\n            </>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import './style/App.scss';\nimport Login from \"./components/Login\";\nimport Home from \"./components/Home\";\nimport { useSelector } from \"react-redux\";\nimport \"../node_modules/noty/lib/noty.css\";\nimport \"../node_modules/noty/lib/themes/nest.css\";\n\nfunction App() {\n  const isLoggedIn = useSelector(state => state.user.isLoggedIn);\n  return (\n    <div className=\"App\">\n      {isLoggedIn===false && <Login/>}\n      {isLoggedIn===true && <Home/>}\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    users :[{\r\n            username : \"deepak\",\r\n            password : \"deepak123\",\r\n            likedDishes : []\r\n        },\r\n        {\r\n            username : \"aman\",\r\n            password : \"aman123\",\r\n            likedDishes : []\r\n        },\r\n        {\r\n            username : \"anand\",\r\n            password : \"anand123\",\r\n            likedDishes : []\r\n        },\r\n        {\r\n            username : \"neha\",\r\n            password : \"neha123\",\r\n            likedDishes : []\r\n        },\r\n        {\r\n            username : \"nikhil\",\r\n            password : \"nikhil123\",\r\n            likedDishes : []\r\n        },\r\n        {\r\n            username : \"jay\",\r\n            password : \"jay123\",\r\n            likedDishes : []\r\n        },\r\n        {\r\n            username : \"anil\",\r\n            password : \"anil123\",\r\n            likedDishes : []\r\n        },\r\n        {\r\n            username : \"ankit\",\r\n            password : \"ankit123\",\r\n            likedDishes : []\r\n        },\r\n        {\r\n            username : \"shiva\",\r\n            password : \"shiva123\",\r\n            likedDishes : []\r\n        },\r\n        {\r\n            username : \"pankaj\",\r\n            password : \"pankaj123\",\r\n            likedDishes : []\r\n        },\r\n    ],\r\n    currentUser:{},\r\n    isLoggedIn : false,\r\n};\r\n\r\nconst reducer =  (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case \"LOGIN_USER\":\r\n            return{\r\n                ...state,\r\n                isLoggedIn : true\r\n            };\r\n        case \"SET_CURR_USER\":\r\n            return{\r\n                ...state,\r\n                currentUser : action.payload\r\n            };\r\n        case \"LOGOUT_USER\":\r\n            return{\r\n                ...state,\r\n                isLoggedIn : false,\r\n                currentUser : {}\r\n            };\r\n        case \"UPDATE_USER\":\r\n            var index = state.users.findIndex(user=>user.username===action.payload.username);;\r\n            let usersAfter = state.users;\r\n            usersAfter[index] = action.payload;\r\n            return{\r\n                ...state,\r\n                users : usersAfter\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","const initialState = {\r\n    dish :[]\r\n};\r\n\r\nconst reducer =  (state = initialState, action)=>{\r\n    switch (action.type) {\r\n        case \"ADD_DISH\":\r\n            return{\r\n                ...state,\r\n                dish : [...state.dish,action.payload]\r\n            };\r\n        case \"UPDATE_VOTE\":\r\n            const index = state.dish.findIndex(dish=>dish.id===action.payload.id);\r\n            let dishAftAdd = state.dish;\r\n            dishAftAdd[index] = action.payload;\r\n            return{\r\n                ...state,\r\n                dish : dishAftAdd\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import userReducer from \"./reducers/userReducer\";\r\nimport dishReducer from \"./reducers/dishReducer\";\r\n\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport { persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst rootReducer = combineReducers({\r\n    user : userReducer,\r\n    dish : dishReducer,\r\n    \r\n});\r\n\r\nconst persistConfig = {\r\n    key : 'root',\r\n    storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig,rootReducer);\r\n\r\nexport default persistedReducer;\r\n","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport { persistStore } from \"redux-persist\";\r\n\r\nconst store = createStore(rootReducer,composeWithDevTools());\r\nconst persistor = persistStore(store);\r\n\r\nexport {store, persistor};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store ,persistor } from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </PersistGate>  \n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}